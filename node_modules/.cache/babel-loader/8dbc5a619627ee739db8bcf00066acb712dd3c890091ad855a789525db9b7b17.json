{"ast":null,"code":"var _jsxFileName = \"D:\\\\MCQ Generator_Frontend\\\\core\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  cVITE_API_URL = 'http://127.0.0.1:8000/mcq/';\n  const [data, SetData] = useState([]);\n  useEffect(() => {\n    async function fetchData() {\n      console.log(VITE_API_URL);\n      try {\n        const response = await fetch(`${import.meta.env.VITE_API_URL}posts`);\n        if (!response) {\n          throw new Error('Network Response Failed');\n        }\n        const result = await response.json();\n        // console.log(result);\n        SetData(result);\n      } catch (error) {\n        console.log('Error Fetching data:' + error);\n      }\n    }\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"users\",\n        children: \"test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }, this), data.map(data => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {}, data.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 52\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [data.title, data.body]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 58\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"5bWMJ8+QXfglENJgHVyCVZn6AFk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","cVITE_API_URL","data","SetData","fetchData","console","log","VITE_API_URL","response","fetch","import","meta","env","Error","result","json","error","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","id","title","body","_c","$RefreshReg$"],"sources":["D:/MCQ Generator_Frontend/core/src/App.jsx"],"sourcesContent":["import { useState,useEffect } from 'react'\nimport './App.css'\nfunction App() {\n  cVITE_API_URL='http://127.0.0.1:8000/mcq/'\n const[data, SetData]=useState([])\n  useEffect(()=>{\n    async function fetchData(){\n      console.log(VITE_API_URL);\n      try{\n        const response = await fetch(`${import.meta.env.VITE_API_URL}posts`);\n        if(!response){\n          throw new Error('Network Response Failed');\n        }\n        const result= await response.json();\n        // console.log(result);\n        SetData(result);\n      }\n      catch(error){\n        console.log('Error Fetching data:'+error);\n      }\n\n    }\n    fetchData();\n  },[]);\n\n\n  return (\n    <>\n   \n    <div>\n      <h1 className='users'>test</h1>\n      {data.map((data)=>(\n      <div className='user'><h3 key={data.id}></h3><br /><h1>{data.title}{data.body}</h1></div>\n      ))}\n    </div>\n</>\n\n  )\n}\n\nexport default App\n"],"mappings":";;AAAA,SAASA,QAAQ,EAACC,SAAS,QAAQ,OAAO;AAC1C,OAAO,WAAW;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAClB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACbC,aAAa,GAAC,4BAA4B;EAC3C,MAAK,CAACC,IAAI,EAAEC,OAAO,CAAC,GAACV,QAAQ,CAAC,EAAE,CAAC;EAChCC,SAAS,CAAC,MAAI;IACZ,eAAeU,SAASA,CAAA,EAAE;MACxBC,OAAO,CAACC,GAAG,CAACC,YAAY,CAAC;MACzB,IAAG;QACD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEC,MAAM,CAACC,IAAI,CAACC,GAAG,CAACL,YAAa,OAAM,CAAC;QACpE,IAAG,CAACC,QAAQ,EAAC;UACX,MAAM,IAAIK,KAAK,CAAC,yBAAyB,CAAC;QAC5C;QACA,MAAMC,MAAM,GAAE,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;QACnC;QACAZ,OAAO,CAACW,MAAM,CAAC;MACjB,CAAC,CACD,OAAME,KAAK,EAAC;QACVX,OAAO,CAACC,GAAG,CAAC,sBAAsB,GAACU,KAAK,CAAC;MAC3C;IAEF;IACAZ,SAAS,CAAC,CAAC;EACb,CAAC,EAAC,EAAE,CAAC;EAGL,oBACER,OAAA,CAAAE,SAAA;IAAAmB,QAAA,eAEArB,OAAA;MAAAqB,QAAA,gBACErB,OAAA;QAAIsB,SAAS,EAAC,OAAO;QAAAD,QAAA,EAAC;MAAI;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAC9BpB,IAAI,CAACqB,GAAG,CAAErB,IAAI,iBACfN,OAAA;QAAKsB,SAAS,EAAC,MAAM;QAAAD,QAAA,gBAACrB,OAAA,WAASM,IAAI,CAACsB,EAAE;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAAA1B,OAAA;UAAAuB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAAA1B,OAAA;UAAAqB,QAAA,GAAKf,IAAI,CAACuB,KAAK,EAAEvB,IAAI,CAACwB,IAAI;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CACvF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC,gBACR,CAAC;AAGH;AAACtB,EAAA,CApCQD,GAAG;AAAA4B,EAAA,GAAH5B,GAAG;AAsCZ,eAAeA,GAAG;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}