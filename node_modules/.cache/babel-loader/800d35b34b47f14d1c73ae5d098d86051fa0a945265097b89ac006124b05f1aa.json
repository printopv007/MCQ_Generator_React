{"ast":null,"code":"var _jsxFileName = \"E:\\\\MCQ_Generator_Task\\\\core\\\\src\\\\components\\\\Random.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { fetchData } from \"../api\";\nimport Container from \"react-bootstrap/Container\";\nimport Button from \"react-bootstrap/Button\";\nimport Toast from 'react-bootstrap/Toast';\nimport { Link } from \"react-router-dom\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Random = () => {\n  _s();\n  const [show, setShow] = useState(false);\n  const [data, setData] = useState([]);\n  const [userAnswers, setUserAnswers] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [answerSelected, setAnswerSelected] = useState(false);\n  const [score, setScore] = useState(0); // Track the user's score\n  const [showScoreAlert, setShowScoreAlert] = useState(false); // Control when to show the score alert\n  const [showSubmitButton, setShowSubmitButton] = useState(false); // Control when to show the \"Submit\" button\n\n  useEffect(() => {\n    getData();\n  }, []);\n  useEffect(() => {\n    if (answerSelected && currentQuestionIndex === data.length - 1) {\n      // Calculate the score when all questions have been answered\n      const newScore = userAnswers.reduce((totalScore, answerIndex, questionIndex) => {\n        const isCorrect = data[questionIndex].answer[answerIndex].is_right;\n        return isCorrect ? totalScore + 1 : totalScore;\n      }, 0);\n      setScore(newScore);\n      setShowScoreAlert(true);\n      setShowSubmitButton(false); // Hide the \"Submit\" button after showing the score\n    }\n  }, [userAnswers, currentQuestionIndex, answerSelected, data, score]);\n  const getData = async () => {\n    const response = await fetchData('mcq/q/django');\n    const shuffledData = shuffleArray(response);\n    setData(shuffledData);\n  };\n  const shuffleArray = array => {\n    let shuffledArray = array.slice();\n    for (let i = shuffledArray.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [shuffledArray[i], shuffledArray[j]] = [shuffledArray[j], shuffledArray[i]];\n      // Shuffle the answers within each question\n      shuffledArray[i].answer = shuffleAnswers(shuffledArray[i].answer);\n      shuffledArray[j].answer = shuffleAnswers(shuffledArray[j].answer);\n    }\n    return shuffledArray;\n  };\n  const shuffleAnswers = answers => {\n    let shuffledAnswers = answers.slice();\n    for (let i = shuffledAnswers.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [shuffledAnswers[i], shuffledAnswers[j]] = [shuffledAnswers[j], shuffledAnswers[i]];\n    }\n    return shuffledAnswers;\n  };\n  const handleAnswerClick = (questionIndex, answerIndex) => {\n    if (!answerSelected) {\n      const newAnswers = [...userAnswers];\n      newAnswers[questionIndex] = answerIndex;\n      setUserAnswers(newAnswers);\n      setAnswerSelected(true);\n      if (questionIndex === data.length - 1) {\n        // Show the \"Submit\" button when the last question is answered\n        setShowSubmitButton(true);\n      }\n    }\n  };\n  const handleNextClick = () => {\n    if (currentQuestionIndex < data.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n      setAnswerSelected(false);\n    }\n  };\n  const handleScoreSubmit = () => {\n    // Calculate the score when the user chooses to submit\n    const newScore = userAnswers.reduce((totalScore, answerIndex, questionIndex) => {\n      const isCorrect = data[questionIndex].answer[answerIndex].is_right;\n      return isCorrect ? totalScore + 1 : totalScore;\n    }, 0);\n    setScore(newScore);\n    setShowScoreAlert(true);\n    setShowSubmitButton(false);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    style: {\n      textAlign: 'center',\n      placeContent: 'center'\n    },\n    children: [data.length > 0 && currentQuestionIndex < data.length && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"\",\n          children: [currentQuestionIndex + 1, \") \", data[currentQuestionIndex].title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"answer-list\",\n        children: data[currentQuestionIndex].answer.map((answer, answerIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            action: \"\",\n            children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"main\",\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: /*#__PURE__*/_jsxDEV(Col, {\n                  xs: true,\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    variant: answerSelected && (answer.is_right || userAnswers[currentQuestionIndex] === answerIndex) ? answer.is_right ? \"success\" : \"danger\" : \"warning\",\n                    onClick: () => handleAnswerClick(currentQuestionIndex, answerIndex),\n                    disabled: answerSelected || showScoreAlert,\n                    className: answerSelected ? \"disabled-answer\" : \"\",\n                    style: {\n                      width: '20rem'\n                    },\n                    children: [answerIndex + 1, \") \", answer.answer_text, answer.is_right ? \"\" : \"\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 112,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 13\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 17\n          }, this)\n        }, answer.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this), answerSelected && currentQuestionIndex < data.length - 1 && /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          float: 'left',\n          marginLeft: '150px'\n        },\n        onClick: handleNextClick,\n        variant: \"primary\",\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }, this), showSubmitButton && /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleScoreSubmit,\n        variant: \"warning\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this), showScoreAlert && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          float: 'left',\n          marginLeft: '40px'\n        },\n        onClick: () => setShow(true),\n        children: \"Show Result\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        style: {\n          float: 'left',\n          marginLeft: '40px'\n        },\n        to: \"/\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"success\",\n          children: \"Back to Homepage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 55\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: [\" \", /*#__PURE__*/_jsxDEV(Toast, {\n          style: {\n            width: '1000px',\n            height: '100px'\n          },\n          onClose: () => setShow(false),\n          show: show,\n          delay: 3000,\n          children: [/*#__PURE__*/_jsxDEV(Toast.Header, {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"holder.js/20x20?text=%20\",\n              className: \"rounded me-2\",\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              className: \"me-auto\",\n              children: \"Your Result\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              children: \"Score Calculated\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Toast.Body, {\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\" \\uD83C\\uDF89 Congrats,Your Final Score is \", score, \" out of \", data.length, \" \\uD83C\\uDF89 \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 24\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 20\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n_s(Random, \"TOqV7wzUahdtiMVONr/aFNX9Rz0=\");\n_c = Random;\nexport default Random;\nvar _c;\n$RefreshReg$(_c, \"Random\");","map":{"version":3,"names":["React","useEffect","useState","fetchData","Container","Button","Toast","Link","Row","Col","jsxDEV","_jsxDEV","Random","_s","show","setShow","data","setData","userAnswers","setUserAnswers","currentQuestionIndex","setCurrentQuestionIndex","answerSelected","setAnswerSelected","score","setScore","showScoreAlert","setShowScoreAlert","showSubmitButton","setShowSubmitButton","getData","length","newScore","reduce","totalScore","answerIndex","questionIndex","isCorrect","answer","is_right","response","shuffledData","shuffleArray","array","shuffledArray","slice","i","j","Math","floor","random","shuffleAnswers","answers","shuffledAnswers","handleAnswerClick","newAnswers","handleNextClick","handleScoreSubmit","style","textAlign","placeContent","children","htmlFor","title","fileName","_jsxFileName","lineNumber","columnNumber","className","map","action","xs","variant","onClick","disabled","width","answer_text","id","float","marginLeft","to","height","onClose","delay","Header","src","alt","Body","_c","$RefreshReg$"],"sources":["E:/MCQ_Generator_Task/core/src/components/Random.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { fetchData } from \"../api\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Toast from 'react-bootstrap/Toast';\r\nimport { Link } from \"react-router-dom\";\r\nimport  Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nexport const Random = () => {\r\n  const [show, setShow] = useState(false);\r\n  const [data, setData] = useState([]);\r\n  const [userAnswers, setUserAnswers] = useState([]);\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  const [answerSelected, setAnswerSelected] = useState(false);\r\n  const [score, setScore] = useState(0); // Track the user's score\r\n  const [showScoreAlert, setShowScoreAlert] = useState(false); // Control when to show the score alert\r\n  const [showSubmitButton, setShowSubmitButton] = useState(false); // Control when to show the \"Submit\" button\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (answerSelected && currentQuestionIndex === data.length - 1) {\r\n      // Calculate the score when all questions have been answered\r\n      const newScore = userAnswers.reduce((totalScore, answerIndex, questionIndex) => {\r\n        const isCorrect = data[questionIndex].answer[answerIndex].is_right;\r\n        return isCorrect ? totalScore + 1 : totalScore;\r\n      }, 0);\r\n      setScore(newScore);\r\n      setShowScoreAlert(true);\r\n      setShowSubmitButton(false); // Hide the \"Submit\" button after showing the score\r\n    }\r\n  }, [userAnswers, currentQuestionIndex, answerSelected, data, score]);\r\n\r\n  const getData = async () => {\r\n    const response = await fetchData('mcq/q/django');\r\n    const shuffledData = shuffleArray(response);\r\n    setData(shuffledData);\r\n  };\r\n\r\n  const shuffleArray = (array) => {\r\n    let shuffledArray = array.slice();\r\n    for (let i = shuffledArray.length - 1; i > 0; i--) {\r\n      const j = Math.floor(Math.random() * (i + 1));\r\n      [shuffledArray[i], shuffledArray[j]] = [shuffledArray[j], shuffledArray[i]];\r\n      // Shuffle the answers within each question\r\n      shuffledArray[i].answer = shuffleAnswers(shuffledArray[i].answer);\r\n      shuffledArray[j].answer = shuffleAnswers(shuffledArray[j].answer);\r\n    }\r\n    return shuffledArray;\r\n  };\r\n  \r\n  \r\n  const shuffleAnswers = (answers) => {\r\n    let shuffledAnswers = answers.slice();\r\n    for (let i = shuffledAnswers.length - 1; i > 0; i--) {\r\n      const j = Math.floor(Math.random() * (i + 1));\r\n      [shuffledAnswers[i], shuffledAnswers[j]] = [shuffledAnswers[j], shuffledAnswers[i]];\r\n    }\r\n    return shuffledAnswers;\r\n  };\r\n  \r\n\r\n  const handleAnswerClick = (questionIndex, answerIndex) => {\r\n    if (!answerSelected) {\r\n      const newAnswers = [...userAnswers];\r\n      newAnswers[questionIndex] = answerIndex;\r\n      setUserAnswers(newAnswers);\r\n      setAnswerSelected(true);\r\n\r\n      if (questionIndex === data.length - 1) {\r\n        // Show the \"Submit\" button when the last question is answered\r\n        setShowSubmitButton(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleNextClick = () => {\r\n    if (currentQuestionIndex < data.length - 1) {\r\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\r\n      setAnswerSelected(false);\r\n    }\r\n  };\r\n\r\n  const handleScoreSubmit = () => {\r\n    // Calculate the score when the user chooses to submit\r\n    const newScore = userAnswers.reduce((totalScore, answerIndex, questionIndex) => {\r\n      const isCorrect = data[questionIndex].answer[answerIndex].is_right;\r\n      return isCorrect ? totalScore + 1 : totalScore;\r\n    }, 0);\r\n    setScore(newScore);\r\n    setShowScoreAlert(true);\r\n    setShowSubmitButton(false);\r\n  };\r\n\r\n  return (\r\n\r\n    <Container style={{textAlign:'center', placeContent:'center'}}>\r\n      {data.length > 0 && currentQuestionIndex < data.length && (\r\n        <div>\r\n          <h3>\r\n            <label htmlFor=\"\">{currentQuestionIndex + 1}) {data[currentQuestionIndex].title}</label>\r\n          </h3>\r\n          <ul className=\"answer-list\">\r\n            {data[currentQuestionIndex].answer.map((answer, answerIndex) => (\r\n              <div key={answer.id}>\r\n                <form action=\"\">\r\n                  <br />\r\n                  <div className=\"main\">\r\n                  <Row>\r\n            <Col xs><Button \r\n                      variant={\r\n                        answerSelected &&\r\n                        (answer.is_right || userAnswers[currentQuestionIndex] === answerIndex)\r\n                          ? answer.is_right\r\n                            ? \"success\"\r\n                            : \"danger\"\r\n                          : \"warning\" \r\n                      }\r\n                      onClick={() => handleAnswerClick(currentQuestionIndex, answerIndex)}\r\n                      disabled={answerSelected || showScoreAlert}\r\n                      className={answerSelected ? \"disabled-answer\" : \"\"}\r\n                      style={{width:'20rem'}}>\r\n                      {answerIndex + 1}) {answer.answer_text}\r\n                      {answer.is_right ? \"\" : \"\"}\r\n                    </Button></Col>\r\n        </Row>\r\n                    \r\n                  </div>\r\n                </form>\r\n              </div>\r\n            ))}\r\n          </ul>\r\n          {answerSelected && currentQuestionIndex < data.length - 1 && (\r\n            <Button style={{float:'left',marginLeft:'150px'}} onClick={handleNextClick} variant=\"primary\">\r\n              Next\r\n            </Button>\r\n          )}\r\n          {showSubmitButton && (\r\n            <Button onClick={handleScoreSubmit} variant=\"warning\">\r\n              Submit\r\n            </Button>\r\n          )}\r\n        </div>\r\n      )}\r\n      {showScoreAlert && (\r\n        <div>\r\n\r\n<Button style={{float:'left',marginLeft:'40px'}} onClick={() => setShow(true)}>Show Result</Button>\r\n<Link style={{float:'left',marginLeft:'40px'}} to=\"/\"><Button variant=\"success\">Back to Homepage</Button></Link>\r\n\r\n<br/><br/>\r\n       <Container> <Toast style={{width:'1000px',height:'100px'}} onClose={() => setShow(false)} show={show} delay={3000}>\r\n          <Toast.Header>\r\n            <img\r\n              src=\"holder.js/20x20?text=%20\"\r\n              className=\"rounded me-2\"\r\n              alt=\"\"\r\n            />\r\n            <strong className=\"me-auto\">Your Result</strong>\r\n            <small>Score Calculated</small>\r\n          </Toast.Header>\r\n          <Toast.Body> <h3> 🎉 Congrats,Your Final Score is {score} out of {data.length} 🎉 </h3></Toast.Body>\r\n        </Toast></Container>\r\n        </div>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Random;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}