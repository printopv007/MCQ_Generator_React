{"ast":null,"code":"var _jsxFileName = \"D:\\\\MCQ Generator_Frontend\\\\core\\\\src\\\\components\\\\Cards.jsx\",\n  _s = $RefreshSig$();\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport { useState, usee } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BasicExample() {\n  _s();\n  const [data, setData] = useState([]);\n  const [title, answer] = data;\n  useEffect(() => {\n    getData();\n  }, []);\n  const getData = async () => {\n    const response = await fetchData();\n    setData(response);\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    style: {\n      width: '18rem'\n    },\n    children: data.map((title, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n        variant: \"top\",\n        src: \"holder.js/100px180\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          children: title.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: \"Some quick example text to build on the card title and make up the bulk of the card's content.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          children: \"Go somewhere\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n\n//{data.map((question, index) => (\n//         <div key={index}>\n//           <h3>{question.title}</h3>\n//           <ul>\n//             {/* {question.answer.map((answer) => (\n//               <li key={answer.id}>\n//                 {answer.answer_text}\n//                 {answer.is_right ? ' (Correct)' : ''}\n//               </li>\n//             ))} */}\n//           </ul>\n//         </div>\n//       ))}\n_s(BasicExample, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = BasicExample;\nexport default BasicExample;\nvar _c;\n$RefreshReg$(_c, \"BasicExample\");","map":{"version":3,"names":["Button","Card","useState","usee","jsxDEV","_jsxDEV","BasicExample","_s","data","setData","title","answer","useEffect","getData","response","fetchData","style","width","children","map","index","Img","variant","src","fileName","_jsxFileName","lineNumber","columnNumber","Body","Title","Text","_c","$RefreshReg$"],"sources":["D:/MCQ Generator_Frontend/core/src/components/Cards.jsx"],"sourcesContent":["import Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport { useState,usee } from 'react';\r\nfunction BasicExample() {\r\n    const [data, setData] = useState([])\r\n      const [title,answer] = data\r\n      useEffect(() => {\r\n        getData()\r\n      }, [])\r\n      const getData = async () => {\r\n          const response = await fetchData()\r\n          setData(response)\r\n      }\r\n  return (\r\n    <Card style={{ width: '18rem' }}>\r\n        {data.map((title,index)=>(\r\n            <div key={index}>\r\n                <Card.Img variant=\"top\" src=\"holder.js/100px180\" />\r\n      <Card.Body>\r\n        <Card.Title>{title.title}</Card.Title>\r\n        <Card.Text>\r\n          Some quick example text to build on the card title and make up the\r\n          bulk of the card's content.\r\n        </Card.Text>\r\n        <Button variant=\"primary\">Go somewhere</Button>\r\n      </Card.Body>\r\n            </div>\r\n        ))}\r\n      \r\n    </Card>\r\n  );\r\n}\r\n\r\n\r\n//{data.map((question, index) => (\r\n    //         <div key={index}>\r\n    //           <h3>{question.title}</h3>\r\n    //           <ul>\r\n    //             {/* {question.answer.map((answer) => (\r\n    //               <li key={answer.id}>\r\n    //                 {answer.answer_text}\r\n    //                 {answer.is_right ? ' (Correct)' : ''}\r\n    //               </li>\r\n    //             ))} */}\r\n    //           </ul>\r\n    //         </div>\r\n    //       ))}\r\n\r\nexport default BasicExample;\r\n\r\n"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,wBAAwB;AAC3C,OAAOC,IAAI,MAAM,sBAAsB;AACvC,SAASC,QAAQ,EAACC,IAAI,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACtC,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAACQ,KAAK,EAACC,MAAM,CAAC,GAAGH,IAAI;EAC3BI,SAAS,CAAC,MAAM;IACdC,OAAO,CAAC,CAAC;EACX,CAAC,EAAE,EAAE,CAAC;EACN,MAAMA,OAAO,GAAG,MAAAA,CAAA,KAAY;IACxB,MAAMC,QAAQ,GAAG,MAAMC,SAAS,CAAC,CAAC;IAClCN,OAAO,CAACK,QAAQ,CAAC;EACrB,CAAC;EACL,oBACET,OAAA,CAACJ,IAAI;IAACe,KAAK,EAAE;MAAEC,KAAK,EAAE;IAAQ,CAAE;IAAAC,QAAA,EAC3BV,IAAI,CAACW,GAAG,CAAC,CAACT,KAAK,EAACU,KAAK,kBAClBf,OAAA;MAAAa,QAAA,gBACIb,OAAA,CAACJ,IAAI,CAACoB,GAAG;QAACC,OAAO,EAAC,KAAK;QAACC,GAAG,EAAC;MAAoB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC7DtB,OAAA,CAACJ,IAAI,CAAC2B,IAAI;QAAAV,QAAA,gBACRb,OAAA,CAACJ,IAAI,CAAC4B,KAAK;UAAAX,QAAA,EAAER,KAAK,CAACA;QAAK;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAa,CAAC,eACtCtB,OAAA,CAACJ,IAAI,CAAC6B,IAAI;UAAAZ,QAAA,EAAC;QAGX;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAW,CAAC,eACZtB,OAAA,CAACL,MAAM;UAACsB,OAAO,EAAC,SAAS;UAAAJ,QAAA,EAAC;QAAY;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtC,CAAC;IAAA,GATIP,KAAK;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAUV,CACR;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEA,CAAC;AAEX;;AAGA;AACI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAApB,EAAA,CA3CKD,YAAY;AAAAyB,EAAA,GAAZzB,YAAY;AA6CrB,eAAeA,YAAY;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}