{"ast":null,"code":"var _jsxFileName = \"D:\\\\MCQ Generator_Frontend\\\\core\\\\src\\\\components\\\\Random.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { fetchData } from \"../api\";\nimport Container from \"react-bootstrap/Container\";\nimport Button from \"react-bootstrap/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Random = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [userAnswers, setUserAnswers] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [answerSelected, setAnswerSelected] = useState(false);\n  const [score, setScore] = useState(0); // Track the user's score\n  const [showScoreAlert, setShowScoreAlert] = useState(false); // Control when to show the score alert\n\n  useEffect(() => {\n    getData();\n  }, []);\n  useEffect(() => {\n    if (answerSelected && currentQuestionIndex === data.length - 1) {\n      // Calculate the score when all questions have been answered\n      const newScore = userAnswers.reduce((totalScore, answerIndex, questionIndex) => {\n        const isCorrect = data[questionIndex].answer[answerIndex].is_right;\n        return isCorrect ? totalScore + 1 : totalScore;\n      }, 0);\n      setScore(newScore);\n      setShowScoreAlert(true);\n    }\n  }, [userAnswers, currentQuestionIndex, answerSelected, data, score]);\n  const getData = async () => {\n    const response = await fetchData('mcq/q/django');\n    const shuffledData = shuffleArray(response);\n    setData(shuffledData);\n  };\n  const shuffleArray = array => {\n    let shuffledArray = array.slice();\n    for (let i = shuffledArray.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [shuffledArray[i], shuffledArray[j]] = [shuffledArray[j], shuffledArray[i]];\n    }\n    return shuffledArray;\n  };\n  const handleAnswerClick = (questionIndex, answerIndex) => {\n    if (!answerSelected) {\n      const newAnswers = [...userAnswers];\n      newAnswers[questionIndex] = answerIndex;\n      setUserAnswers(newAnswers);\n      setAnswerSelected(true);\n    }\n  };\n  const handleNextClick = () => {\n    if (currentQuestionIndex < data.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n      setAnswerSelected(false);\n    }\n  };\n  useEffect(() => {\n    if (showScoreAlert) {\n      // Show the score as an alert only once\n      alert(`Your Final Score: ${score} out of ${data.length}`);\n    }\n  }, [showScoreAlert, score, data]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: data.length > 0 && currentQuestionIndex < data.length && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"\",\n          children: [currentQuestionIndex + 1, \") \", data[currentQuestionIndex].title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"answer-list\",\n        children: data[currentQuestionIndex].answer.map((answer, answerIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            action: \"\",\n            children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"main\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: answerSelected && (answer.is_right || userAnswers[currentQuestionIndex] === answerIndex) ? answer.is_right ? \"success\" : \"danger\" : \"primary\",\n                onClick: () => handleAnswerClick(currentQuestionIndex, answerIndex),\n                disabled: answerSelected,\n                className: answerSelected ? \"disabled-answer\" : \"\",\n                children: [answerIndex + 1, \") \", answer.answer_text, answer.is_right ? \" (Correct)\" : \"\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }, this)\n        }, answer.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), answerSelected && currentQuestionIndex < data.length - 1 && /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleNextClick,\n        variant: \"primary\",\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(Random, \"TXElEb0eeIa5txEwtPCRvfrf/z8=\");\n_c = Random;\nexport default Random;\nvar _c;\n$RefreshReg$(_c, \"Random\");","map":{"version":3,"names":["React","useEffect","useState","fetchData","Container","Button","jsxDEV","_jsxDEV","Random","_s","data","setData","userAnswers","setUserAnswers","currentQuestionIndex","setCurrentQuestionIndex","answerSelected","setAnswerSelected","score","setScore","showScoreAlert","setShowScoreAlert","getData","length","newScore","reduce","totalScore","answerIndex","questionIndex","isCorrect","answer","is_right","response","shuffledData","shuffleArray","array","shuffledArray","slice","i","j","Math","floor","random","handleAnswerClick","newAnswers","handleNextClick","alert","children","htmlFor","title","fileName","_jsxFileName","lineNumber","columnNumber","className","map","action","variant","onClick","disabled","answer_text","id","_c","$RefreshReg$"],"sources":["D:/MCQ Generator_Frontend/core/src/components/Random.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { fetchData } from \"../api\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nexport const Random = () => {\r\n  const [data, setData] = useState([]);\r\n  const [userAnswers, setUserAnswers] = useState([]);\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  const [answerSelected, setAnswerSelected] = useState(false);\r\n  const [score, setScore] = useState(0); // Track the user's score\r\n  const [showScoreAlert, setShowScoreAlert] = useState(false); // Control when to show the score alert\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (answerSelected && currentQuestionIndex === data.length - 1) {\r\n      // Calculate the score when all questions have been answered\r\n      const newScore = userAnswers.reduce((totalScore, answerIndex, questionIndex) => {\r\n        const isCorrect = data[questionIndex].answer[answerIndex].is_right;\r\n        return isCorrect ? totalScore + 1 : totalScore;\r\n      }, 0);\r\n      setScore(newScore);\r\n      setShowScoreAlert(true);\r\n    }\r\n  }, [userAnswers, currentQuestionIndex, answerSelected, data, score]);\r\n\r\n  const getData = async () => {\r\n    const response = await fetchData('mcq/q/django');\r\n    const shuffledData = shuffleArray(response);\r\n    setData(shuffledData);\r\n  };\r\n\r\n  const shuffleArray = (array) => {\r\n    let shuffledArray = array.slice();\r\n    for (let i = shuffledArray.length - 1; i > 0; i--) {\r\n      const j = Math.floor(Math.random() * (i + 1));\r\n      [shuffledArray[i], shuffledArray[j]] = [shuffledArray[j], shuffledArray[i]];\r\n    }\r\n    return shuffledArray;\r\n  };\r\n\r\n  const handleAnswerClick = (questionIndex, answerIndex) => {\r\n    if (!answerSelected) {\r\n      const newAnswers = [...userAnswers];\r\n      newAnswers[questionIndex] = answerIndex;\r\n      setUserAnswers(newAnswers);\r\n      setAnswerSelected(true);\r\n    }\r\n  };\r\n\r\n  const handleNextClick = () => {\r\n    if (currentQuestionIndex < data.length - 1) {\r\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\r\n      setAnswerSelected(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (showScoreAlert) {\r\n      // Show the score as an alert only once\r\n      alert(`Your Final Score: ${score} out of ${data.length}`);\r\n    }\r\n  }, [showScoreAlert, score, data]);\r\n\r\n  return (\r\n    <Container>\r\n      {data.length > 0 && currentQuestionIndex < data.length && (\r\n        <div>\r\n          <h3>\r\n            <label htmlFor=\"\">{currentQuestionIndex + 1}) {data[currentQuestionIndex].title}</label>\r\n          </h3>\r\n          <ul className=\"answer-list\">\r\n            {data[currentQuestionIndex].answer.map((answer, answerIndex) => (\r\n              <div key={answer.id}>\r\n                <form action=\"\">\r\n                  <br />\r\n                  <div className=\"main\">\r\n                    <Button\r\n                      variant={\r\n                        answerSelected &&\r\n                        (answer.is_right || userAnswers[currentQuestionIndex] === answerIndex)\r\n                          ? answer.is_right\r\n                            ? \"success\"\r\n                            : \"danger\"\r\n                          : \"primary\"\r\n                      }\r\n                      onClick={() => handleAnswerClick(currentQuestionIndex, answerIndex)}\r\n                      disabled={answerSelected}\r\n                      className={answerSelected ? \"disabled-answer\" : \"\"}\r\n                    >\r\n                      {answerIndex + 1}) {answer.answer_text}\r\n                      {answer.is_right ? \" (Correct)\" : \"\"}\r\n                    </Button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            ))}\r\n          </ul>\r\n          {answerSelected && currentQuestionIndex < data.length - 1 && (\r\n            <Button onClick={handleNextClick} variant=\"primary\">\r\n              Next\r\n            </Button>\r\n          )}\r\n        </div>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Random;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}