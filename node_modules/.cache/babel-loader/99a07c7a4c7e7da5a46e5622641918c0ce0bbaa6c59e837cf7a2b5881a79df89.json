{"ast":null,"code":"var _jsxFileName = \"D:\\\\MCQ Generator_Frontend\\\\core\\\\src\\\\components\\\\Grid.jsx\",\n  _s = $RefreshSig$();\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { useState, useEffect } from 'react';\nimport { fetchData } from '../api';\nimport Cards from './Cards';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AutoLayoutExample() {\n  _s();\n  const [data, setData] = useState([]);\n  const [title, answer] = data;\n  useEffect(() => {\n    getData();\n  }, []);\n  const getData = async () => {\n    const response = await fetchData();\n    setData(response);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      md: 4,\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        children: \"1 of 3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: \"3 of 3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 6\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_s(AutoLayoutExample, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = AutoLayoutExample;\nexport default AutoLayoutExample;\n\n// function AutoLayoutExample() {\n//     const [data, setData] = useState([])\n//     const [title,answer] = data\n//     useEffect(() => {\n//       getData()\n//     }, [])\n//     const getData = async () => {\n//         const response = await fetchData()\n//         setData(response)\n//     }\n//   return (\n//     <Container>\n//       <Row>\n//       <div>\n//       {data.map((question, index) => (\n//         <div key={index}>\n//           <h3>{question.title}</h3>\n//           <ul>\n//             {/* {question.answer.map((answer) => (\n//               <li key={answer.id}>\n//                 {answer.answer_text}\n//                 {answer.is_right ? ' (Correct)' : ''}\n//               </li>\n//             ))} */}\n//           </ul>\n//         </div>\n//       ))}\n//     </div>\n\n//       </Row>\n\n//     </Container>\n//   );\n// }\n\n// export default AutoLayoutExample;\nvar _c;\n$RefreshReg$(_c, \"AutoLayoutExample\");","map":{"version":3,"names":["Container","Row","Col","useState","useEffect","fetchData","Cards","jsxDEV","_jsxDEV","AutoLayoutExample","_s","data","setData","title","answer","getData","response","children","md","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/MCQ Generator_Frontend/core/src/components/Grid.jsx"],"sourcesContent":["import Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { useState,useEffect } from 'react';\r\nimport { fetchData } from '../api';\r\nimport Cards from './Cards'\r\nfunction AutoLayoutExample() {\r\n  const [data, setData] = useState([])\r\n      const [title,answer] = data\r\n      useEffect(() => {\r\n        getData()\r\n      }, [])\r\n      const getData = async () => {\r\n          const response = await fetchData()\r\n          setData(response)\r\n      }\r\n  return (\r\n    <Container>\r\n     <Row md={4}>\r\n        <Col>1 of 3</Col>\r\n        {/* <Col xs={6}>2 of 3</Col> */}\r\n        <Col>3 of 3</Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default AutoLayoutExample;\r\n\r\n\r\n// function AutoLayoutExample() {\r\n//     const [data, setData] = useState([])\r\n//     const [title,answer] = data\r\n//     useEffect(() => {\r\n//       getData()\r\n//     }, [])\r\n//     const getData = async () => {\r\n//         const response = await fetchData()\r\n//         setData(response)\r\n//     }\r\n//   return (\r\n//     <Container>\r\n//       <Row>\r\n//       <div>\r\n//       {data.map((question, index) => (\r\n//         <div key={index}>\r\n//           <h3>{question.title}</h3>\r\n//           <ul>\r\n//             {/* {question.answer.map((answer) => (\r\n//               <li key={answer.id}>\r\n//                 {answer.answer_text}\r\n//                 {answer.is_right ? ' (Correct)' : ''}\r\n//               </li>\r\n//             ))} */}\r\n//           </ul>\r\n//         </div>\r\n//       ))}\r\n//     </div>\r\n \r\n\r\n\r\n\r\n//       </Row>\r\n      \r\n//     </Container>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n// export default AutoLayoutExample;"],"mappings":";;AAAA,OAAOA,SAAS,MAAM,2BAA2B;AACjD,OAAOC,GAAG,MAAM,qBAAqB;AACrC,OAAOC,GAAG,MAAM,qBAAqB;AACrC,SAASC,QAAQ,EAACC,SAAS,QAAQ,OAAO;AAC1C,SAASC,SAAS,QAAQ,QAAQ;AAClC,OAAOC,KAAK,MAAM,SAAS;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAC3B,SAASC,iBAAiBA,CAAA,EAAG;EAAAC,EAAA;EAC3B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAChC,MAAM,CAACU,KAAK,EAACC,MAAM,CAAC,GAAGH,IAAI;EAC3BP,SAAS,CAAC,MAAM;IACdW,OAAO,CAAC,CAAC;EACX,CAAC,EAAE,EAAE,CAAC;EACN,MAAMA,OAAO,GAAG,MAAAA,CAAA,KAAY;IACxB,MAAMC,QAAQ,GAAG,MAAMX,SAAS,CAAC,CAAC;IAClCO,OAAO,CAACI,QAAQ,CAAC;EACrB,CAAC;EACL,oBACER,OAAA,CAACR,SAAS;IAAAiB,QAAA,eACTT,OAAA,CAACP,GAAG;MAACiB,EAAE,EAAE,CAAE;MAAAD,QAAA,gBACRT,OAAA,CAACN,GAAG;QAAAe,QAAA,EAAC;MAAM;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAEjBd,OAAA,CAACN,GAAG;QAAAe,QAAA,EAAC;MAAM;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACd;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEhB;AAACZ,EAAA,CAnBQD,iBAAiB;AAAAc,EAAA,GAAjBd,iBAAiB;AAqB1B,eAAeA,iBAAiB;;AAGhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAKA;;AAEA;AACA;AACA;;AAIA;AAAA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}