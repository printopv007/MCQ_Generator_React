{"ast":null,"code":"var _jsxFileName = \"D:\\\\MCQ Generator_Frontend\\\\core\\\\src\\\\api\\\\ConnectAPI.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CollectData = url => {\n  _s();\n  const [isFetching, setFetching] = useState(true); // Start with isFetching as true\n  const [dataState, setDataState] = useState({\n    data: []\n  });\n  const apiUrl = url;\n  useEffect(() => {\n    console.log(\"Mounting or Re-rendering...\");\n    const fetchDataFromApi = async () => {\n      try {\n        const response = await axios.get(apiUrl);\n        setDataState({\n          data: response.data\n        });\n      } catch (e) {\n        console.log(e);\n      } finally {\n        setFetching(false); // Set isFetching to false regardless of success or error\n      }\n    };\n\n    fetchDataFromApi();\n  }, [apiUrl]);\n  if (isFetching) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 16\n    }, this); // You can display a loading message while fetching\n  }\n\n  // Only render the data once it's been fetched\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: JSON.stringify(dataState)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 12\n  }, this);\n};\n_s(CollectData, \"XxTfcP5ibmR4mSXsVsfOcy6F9UA=\");\n_c = CollectData;\nexport default CollectData;\nvar _c;\n$RefreshReg$(_c, \"CollectData\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","CollectData","url","_s","isFetching","setFetching","dataState","setDataState","data","apiUrl","console","log","fetchDataFromApi","response","get","e","children","fileName","_jsxFileName","lineNumber","columnNumber","JSON","stringify","_c","$RefreshReg$"],"sources":["D:/MCQ Generator_Frontend/core/src/api/ConnectAPI.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst CollectData = (url) => {\r\n    const [isFetching, setFetching] = useState(true); // Start with isFetching as true\r\n    const [dataState, setDataState] = useState({ data: [] });\r\n    const apiUrl = url;\r\n\r\n    useEffect(() => {\r\n        console.log(\"Mounting or Re-rendering...\");\r\n        const fetchDataFromApi = async () => {\r\n            try {\r\n                const response = await axios.get(apiUrl);\r\n                setDataState({ data: response.data });\r\n            } catch (e) {\r\n                console.log(e);\r\n            } finally {\r\n                setFetching(false); // Set isFetching to false regardless of success or error\r\n            }\r\n        };\r\n\r\n        fetchDataFromApi();\r\n    }, [apiUrl]);\r\n\r\n    if (isFetching) {\r\n        return <p>Loading...</p>; // You can display a loading message while fetching\r\n    }\r\n\r\n    // Only render the data once it's been fetched\r\n    return <div>{JSON.stringify(dataState)}</div>;\r\n};\r\n\r\nexport default CollectData;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAW,GAAIC,GAAG,IAAK;EAAAC,EAAA;EACzB,MAAM,CAACC,UAAU,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAClD,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC;IAAEW,IAAI,EAAE;EAAG,CAAC,CAAC;EACxD,MAAMC,MAAM,GAAGP,GAAG;EAElBN,SAAS,CAAC,MAAM;IACZc,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;IAC1C,MAAMC,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMf,KAAK,CAACgB,GAAG,CAACL,MAAM,CAAC;QACxCF,YAAY,CAAC;UAAEC,IAAI,EAAEK,QAAQ,CAACL;QAAK,CAAC,CAAC;MACzC,CAAC,CAAC,OAAOO,CAAC,EAAE;QACRL,OAAO,CAACC,GAAG,CAACI,CAAC,CAAC;MAClB,CAAC,SAAS;QACNV,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;MACxB;IACJ,CAAC;;IAEDO,gBAAgB,CAAC,CAAC;EACtB,CAAC,EAAE,CAACH,MAAM,CAAC,CAAC;EAEZ,IAAIL,UAAU,EAAE;IACZ,oBAAOJ,OAAA;MAAAgB,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,CAAC,CAAC;EAC9B;;EAEA;EACA,oBAAOpB,OAAA;IAAAgB,QAAA,EAAMK,IAAI,CAACC,SAAS,CAAChB,SAAS;EAAC;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AACjD,CAAC;AAACjB,EAAA,CA3BIF,WAAW;AAAAsB,EAAA,GAAXtB,WAAW;AA6BjB,eAAeA,WAAW;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}